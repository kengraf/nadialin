{
   "AWSTemplateFormatVersion": "2010-09-09",
   "Description": "This template will deploy AWS infrastructure. Must have admin rights to deploy policies and services. ",
    "Metadata" : {
        "Stack" : {"Value" : "0"},
        "VersionDate" : { "Value" : "03032023" },
        "Identifier" : { "Value" : "main-infrastructure" },
        "Input" : { "Description" : "Input of all required parameters in nested stacks" },
        "Output" : { "Description" : "N/A" }
    },
   "Parameters": {
      "storageStackURL": {
         "Type": "String",
         "Default": "https://s3.amazonaws.com/XXX/templates/storageStackURL.json"
      },
      "identityStackURL": {
         "Type": "String",
         "Default": "https://s3.amazonaws.com/XXX/templates/identityStackURL.json"
      },
      "webStackURL": {
         "Type": "String",
         "Default": "https://s3.amazonaws.com/XXX/templates/webStackURL.json"
      },
      "vpnStackURL": {
         "Type": "String",
	 "Default" : "https://s3.amazonaws.com/XXX/templates/VpnStack.json"
      },
      "scenarioStackURL": {
         "Type": "String",
	 "Default" : "https://s3.amazonaws.com/XXX/templates/scenarioStack.json"
      }
   },
   "Conditions": {
      "CreateStack1": {
         "Fn::Not": [ { "Fn::Equals": [ { "Ref": "storageStackURL" }, "" ] } ]
      },
      "CreateStack2": {
         "Fn::Not": [ { "Fn::Equals": [ { "Ref": "identityStackURL" }, "" ] } ]
      },
      "CreateStack3": {
         "Fn::Not": [ { "Fn::Equals": [ { "Ref": "webStackURL" }, "" ] } ]
      },
      "CreateStack4": {
         "Fn::Not": [ { "Fn::Equals": [ { "Ref": "vpnStackURL" }, "" ] } ]
      }
   },
   "Resources": {

      "stack3": {
         "Type": "AWS::CloudFormation::Stack",
	 "DependsOn" : "storageStack",
         "Condition": "CreateVpnStack"	 
      },
      "vpnStack": {
         "Type": "AWS::CloudFormation::Stack",
	 "DependsOn" : "storageStack",
         "Condition": "CreateVpnStack",
         "Properties": {
            "TemplateURL": {
               "Ref": "VpnStack"
            },
            "TimeoutInMinutes": "30",
            "Parameters": {	    
               "S3bucketURL": {
		 "Fn::GetAtt" : [ "storageStack", "Outputs.S3bucket.DomainName" ]
	       }
            }
         }
      }
   },
   "Outputs": {
      "S3bucket": {
	"Value" : { "Fn::GetAtt" : [ "storageStack", "Outputs.S3bucket.DomainName" ] }
      },
      "CognitoUserPool": {
	"Value" : { "Fn::GetAtt" : [ "identityStack", "Outputs.UserPool" ] }
      },
      "GatewayIP": {
	"Value" : { "Fn::GetAtt" : [ "webStack", "Outputs.GatewayIP" ] }
      },
      "VpnIP": {
	"Value" : { "Fn::GetAtt" : [ "vpnStack", "Outputs.VpnIP" ] }
      },
      "ScenarioIP": {
	"Value" : { "Fn::GetAtt" : [ "vpnStack", "Outputs.CIDR" ] }
      }
   }
}
