AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template to deploy a Python Lambda function with API Gateway v2 and DynamoDB."

Parameters:
  DEPLOYNAME:
    Description: "Prefix name for created resources"
    Type: String
  S3BUCKET:
    Description: "S3 bucket name containing Lambda function code"
    Type: String
  LambdaExecutionRoleArn:
    Type: String
  TableHunters:
    Type: String

Resources:
  BackupEventFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${DEPLOYNAME}-backupEvent"
      Handler: "backupEvent.lambda_handler"
      Runtime: "python3.13"
      Role: !Ref LambdaExecutionRoleArn
      Code:
        S3Bucket: !Ref S3BUCKET
        S3Key: !Sub "v1/backupEvent.zip"
      MemorySize: 128
      
  DatabaseItemsFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${DEPLOYNAME}-databaseItems"
      Handler: "databaseItems.lambda_handler"
      Runtime: "python3.13"
      Role: !Ref LambdaExecutionRoleArn
      Code:
        S3Bucket: !Ref S3BUCKET
        S3Key: !Sub "v1/databaseItems.zip"
      MemorySize: 128

  DoServiceCheckFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${DEPLOYNAME}-doServiceCheck"
      Handler: "doServiceCheck.lambda_handler"
      Runtime: "python3.13"
      Role: !Ref LambdaExecutionRoleArn
      Code:
        S3Bucket: !Ref S3BUCKET
        S3Key: !Sub "v1/doServiceCheck.zip"
      MemorySize: 128

  EndScoringFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${DEPLOYNAME}-endScoring"
      Handler: "endScoring.lambda_handler"
      Runtime: "python3.13"
      Role: !Ref LambdaExecutionRoleArn
      Code:
        S3Bucket: !Ref S3BUCKET
        S3Key: !Sub "v1/endScoring.zip"
      MemorySize: 128

  EventScoresFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${DEPLOYNAME}-eventScores"
      Handler: "eventScores.lambda_handler"
      Runtime: "python3.13"
      Role: !Ref LambdaExecutionRoleArn
      Code:
        S3Bucket: !Ref S3BUCKET
        S3Key: !Sub "v1/eventScores.zip"
      MemorySize: 128

  InstanceStateFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${DEPLOYNAME}-instanceState"
      Handler: "instanceState.lambda_handler"
      Runtime: "python3.13"
      Role: !Ref LambdaExecutionRoleArn
      Code:
        S3Bucket: !Ref S3BUCKET
        S3Key: !Sub "v1/instanceState.zip"
      MemorySize: 128

  ManageInstanceFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${DEPLOYNAME}-manageInstance"
      Handler: "manageInstance.lambda_handler"
      Runtime: "python3.13"
      Role: !Ref LambdaExecutionRoleArn
      Code:
        S3Bucket: !Ref S3BUCKET
        S3Key: !Sub "v1/manageInstance.zip"
      MemorySize: 128

  RestoreEventFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${DEPLOYNAME}-restoreEvent"
      Handler: "restoreEvent.lambda_handler"
      Runtime: "python3.13"
      Role: !Ref LambdaExecutionRoleArn
      Code:
        S3Bucket: !Ref S3BUCKET
        S3Key: !Sub "v1/restoreEvent.zip"
      MemorySize: 128

  RunInstancesFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${DEPLOYNAME}-runInstances"
      Handler: "runInstances.lambda_handler"
      Runtime: "python3.13"
      Role: !Ref LambdaExecutionRoleArn
      Code:
        S3Bucket: !Ref S3BUCKET
        S3Key: !Sub "v1/runInstances.zip"
      MemorySize: 128

  SetupScoringFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${DEPLOYNAME}-setupScoring"
      Handler: "setupScoring.lambda_handler"
      Runtime: "python3.13"
      Role: !Ref LambdaExecutionRoleArn
      Code:
        S3Bucket: !Ref S3BUCKET
        S3Key: !Sub "v1/setupScoring.zip"
      MemorySize: 128

  StartScoringFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${DEPLOYNAME}-startScoring"
      Handler: "startScoring.lambda_handler"
      Runtime: "python3.13"
      Role: !Ref LambdaExecutionRoleArn
      Code:
        S3Bucket: !Ref S3BUCKET
        S3Key: !Sub "v1/startScoring.zip"
      MemorySize: 128

  VerifyTokenFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${DEPLOYNAME}-verifyToken"
      Handler: "verifyToken.handler"
      Runtime: "python3.13"
      Role: !Ref LambdaExecutionRoleArn
      Code:
        S3Bucket: !Ref S3BUCKET
        S3Key: !Sub "v1/verifyToken.zip"
      MemorySize: 128
      Environment:
        Variables:
          TABLE_NAME: !Ref TableHunters
      
