AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template to deploy a Python Lambda function with API Gateway v2 and DynamoDB."

Parameters:
  DEPLOYNAME:
    Description: "Prefix name for created resources"
    Type: String
  S3BUCKET:
    Description: "S3 bucket name containing Lambda function code"
    Type: String
  ApiGatewayRoleArn:
    Type: String
  EventsExecutionRoleArn:
    Type: String    
  VerifyTokenFunctionArn:
    Type: String
    
Resources:
  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Body:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: !Sub "s3://${S3BUCKET}/deploy/apigatewayv2.yaml"
  
  HttpApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref HttpApi
      AutoDeploy: true
      StageName: "v1"
      Description: "Production stage"
      AccessLogSettings:
        DestinationArn: !GetAtt ApiGatewayLogGroup.Arn
        Format: >-
          {"requestId":"$context.requestId","ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime","httpMethod":"$context.httpMethod",
          "routeKey":"$context.routeKey","status":"$context.status",
          "protocol":"$context.protocol","responseLength":"$context.responseLength"}

  ApiGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/api-gateway/${HttpApi}"
      RetentionInDays: 7

  VerifyTokenIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref HttpApi
      IntegrationType: AWS_PROXY
      PayloadFormatVersion: 2.0
      IntegrationUri: !Ref VerifyTokenFunctionArn
      CredentialsArn: !Ref ApiGatewayRoleArn

  EventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      Name: nadialin-instanceState
      EventBusName: default
      Targets:
        - Id: "1"
          Arn: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:nadialin-instanceState"
          RoleArn: !Ref EventsExecutionRoleArn
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - EC2 Instance State-change Notification
        detail:
          state:
            - pending
            - running
            - stopping
            - stopped
            - shutting-down
            - terminated
 
Outputs:
  ApiEndpoint:
    Value: !GetAtt HttpApi.ApiEndpoint
    Export:
      Name: "ApiEndpoint"
  ApiGatewayId:
    Value: !Ref HttpApi
    Export:
      Name: "ApiGatewayId"

  ApiGatewayInvokeUrl:
    Description: "Invoke URL for the API Gateway stage"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/v1"
    Export:
      Name: !Sub "${DEPLOYNAME}-Gateway-URL"
