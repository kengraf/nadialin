AWSTemplateFormatVersion: "2010-09-09"
Description: "Create network for Nadialin, public subnet for OpenVPN, private for squad machines"

Parameters:
  DEPLOYNAME:
    Description: "Prefix name for created resources"
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.66.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: !Ref DEPLOYNAME

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub "${DEPLOYNAME}InternetGateway"

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: !Sub "${DEPLOYNAME}RouteTable"

  OpenSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow all traffic"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "-1"
          FromPort: -1
          ToPort: -1
          CidrIp: "0.0.0.0/0"
          Description: "Allow all inbound traffic"
      SecurityGroupEgress:
        - IpProtocol: "-1"
          FromPort: -1
          ToPort: -1
          CidrIp: "0.0.0.0/0"
          Description: "Allow all outbound traffic"
      Tags:
        - Key: "Name"
          Value: !Sub "${DEPLOYNAME}OpenSecurityGroup"

  ClosedSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Disallow all traffic"
      VpcId: !Ref VPC
      SecurityGroupIngress: []
      SecurityGroupEgress: []
      Tags:
        - Key: "Name"
          Value: !Sub "${DEPLOYNAME}ClosedSecurityGroup"

  RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublic
      RouteTableId: !Ref RouteTable

  IPv4DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
    DependsOn: VPCGatewayAttachment

  SubnetPublic:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.66.1.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: !Sub "${DEPLOYNAME}SubnetPublic"
    
  SubnetPrivate:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.66.2.0/24"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value: !Sub "${DEPLOYNAME}SubnetPrivate"

Outputs:
  VpcId:
    Description: "VPC ID of the created VPC"
    Value: !Ref VPC

  SubnetIdPublic:
    Description: "Subnet ID of the created subnet"
    Value: !Ref SubnetPublic

  SubnetIdPrivate:
    Description: "Subnet ID of the created subnet"
    Value: !Ref SubnetPrivate

  OpenSecurityGroupId:
    Description: "Security Group ID"
    Value: !Ref OpenSecurityGroup

  ClosedSecurityGroupId:
    Description: "Security Group ID"
    Value: !Ref ClosedSecurityGroup

  InternetGatewayId:
    Description: "Internet Gateway ID"
    Value: !Ref InternetGateway
