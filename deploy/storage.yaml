AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to create a public website-enabled S3 bucket.

Parameters:
  ExistingS3BucketName:
    Type: String
    Description: "Specify an existing S3 bucket name to use, or leave blank to create a new one."
    Default: ""

  S3bucketName:
    Description: Postfix name for created resources
    Type: String
    Default: "nadialin"

  DeployName:
    Description: Prefix name for created resources
    Type: String

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Condition: CreateNewBucket
    Properties:
      BucketName: 
        Ref: S3bucketName
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: 
        Ref: S3bucketName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - Ref: S3bucketName
                  - "/*"
Conditions:
  CreateNewBucket: !Equals [!Ref ExistingS3BucketName, ""]

Outputs:
  S3BucketName:
    Value: !If [CreateNewBucket, !Ref MyS3Bucket, !Ref ExistingS3BucketName]
  S3BucketDomainName:
    Value: 
      Fn::GetAtt: [S3bucket, DomainName]
    Export:
      Name:
        Fn::Join:
          - "-"
          - - Ref: DeployName
            - s3bucketName
            - DomainName

  S3BucketWebsiteURL:
    Value: 
      Fn::GetAtt: [S3Bucket, WebsiteURL]
    Export:
      Name:
        Fn::Join:
          - "-"
          - - Ref: DeployName
            - s3bucket
            - URL
